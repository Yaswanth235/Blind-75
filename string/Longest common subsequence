Given two sequences, find the length of longest subsequence present in both of them. Both the strings are of uppercase.

Approach:

         i

    0	      0(A)	0(B)	0(C)	0(A)	0(B)
j  0(A)				1	   1     1     1      1
   0(E)				1    1     1     1      1	
   0(C)				1    1     2     2      2	
   0(B)				1    2     2     2      3	

 if s1[i]==s2[j](Matching condition)
      T[i][j]=T[i-1][j-1]+1
    else(not matching condition)
      T[i][j]=maximum of(T[i-1][j],T[i][j-1])


Code:


class Solution{
    public:
    int lcs(int x, int y, string s1, string s2){
        int dp[x+1][y+1];
        
         for(int i=0;i<x+1;i++) {
           for(int j=0;j<y+1;j++) {
               if(i==0||j==0)
                dp[i][j]=0;
            }
       }
        for(int i=1;i<=x;i++){
            for(int j=1;j<=y;j++){
                if(s1[i-1]==s2[j-1]){
                    dp[i][j]=dp[i-1][j-1]+1;
                }
                else{
                    dp[i][j]=max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        return dp[x][y];
    }
};

Code:

class Solution{
    public:
    void solve(vector<vector<int>> &m, int n, int i, int j, vector<string>& ans, string output){
        if(i==n-1&&j==n-1){
            ans.push_back(output); 
            return;
        }
        m[i][j]=0;
        if(i-1>=0&&m[i-1][j]==1)solve(m,n,i-1,j,ans,output+'U'); 
        if(j-1>=0&&m[i][j-1]==1)solve(m,n,i,j-1,ans,output+'L');
        if(i+1<n&&m[i+1][j]==1)solve(m,n,i+1,j,ans,output+'D');
        if(j+1<n&&m[i][j+1]==1)solve(m,n,i,j+1,ans,output+'R');
        m[i][j]=1;
    }
    vector<string> findPath(vector<vector<int>>&m,int n){
        vector<string> ans;
        if(m[0][0]==0)return ans;
        string output;
        int i=0,j=0;
        solve(m,n,i,j,ans,output);
        return ans;
    }
};
